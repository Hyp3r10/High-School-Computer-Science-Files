
public class SearchTree {
	public IntTreeNode overallRoot;
	
	public boolean contians(int val) {
		return this.contains(this.overallRoot, val);
	} 
	
	private boolean contains(IntTreeNode root, int val) {
		if(root != null) {
			if(root.val == val) {
				return true;
			}
			else {
				if(val < root.val) {
					return contains(root.left, val);
				}
				return contains(root.right, val);
			}
		}
		return false;
	}
	
	public void add(int val) {
		this.add(this.overallRoot, this.overallRoot, val);
	}
	
	private void add(IntTreeNode root, IntTreeNode parent, int val) {
		if(root == null) {
			if(parent == null) {
				parent = new IntTreeNode(val);
			}
			else if(val < parent.val) {
				parent.left = new IntTreeNode(val);
			}
			else if(val > parent.val) {
				parent.right = new IntTreeNode(val);
			} 
		}
		else {
			if(val < root.val) {
				add(root.left, root, val);
			}
			else if(val > parent.val) {
				add(root.right, root, val);
			}
		}
	}
}
