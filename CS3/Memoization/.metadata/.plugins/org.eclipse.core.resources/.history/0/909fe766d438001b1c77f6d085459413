import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;

public class Pascal {
	public TreeMap<int[], Integer> memo;
	public TreeMap<Integer, List<Integer>> pascal;
	public Pascal() {
		memo = new TreeMap<int[], Integer>();
		memo.put(new int[] {0, 0}, 1);
		pascal = new TreeMap<Integer, List<Integer>>();
	}
	public int pascal(int row, int col) {
		int[] loc = new int[] {row, col};
		if(row == 0 || col == 0 || col == row+1) {
			return 1;
		}
		if(row < 0 || col < 0) {
			return 0;
		}
		if(memo.containsKey(loc)) {
			return memo.get(loc);
		} 
		else {
			int result = pascal(row, col-1) + pascal(row-1, col);
			memo.put(loc, result);
			return result;
		}
		
	}
	public void generateRow(int row) {
		if(!pascal.containsKey(row-1)) {
			this.generateRow(row-1);
		}
		else {
			List<Integer> listForRow = new ArrayList<Integer>();
			for(int i = 0; i < row+1; i++) {
				int[] loc = new int[] {row, i};
				listForRow.add(memo.get(key))
				memo.put(loc, memo.get(new int[] {row-1, i-1}));
				
			}
			this.pascal.put(row, listForRow));
		}
	}
	public void printPascalRow(int row) {
		String output = "";
		if(!pascal.containsKey(row)) {
			this.generateRow(row);
		}
		List<Integer> numsOnRow = pascal.get(row);
		for(Integer temp : numsOnRow) {
			output += temp + " ";
		}
		System.out.println(output.trim());
	}
}
