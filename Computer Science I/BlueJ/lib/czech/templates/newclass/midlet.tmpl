/* Soubor je ulozen v kodovani UTF-8.
 * Kontrola kódování: Příliš žluťoučký kůň úpěl ďábelské ódy. */
$PKGLINE

import javax.microedition.midlet.MIDlet;



/*******************************************************************************
 * Instance třídy {@code $CLASSNAME} představují ...
 *
 * @author    jméno autora
 * @version   0.00.000
 */
public class $CLASSNAME extends MIDlet
{
    //== KONSTANTNÍ ATRIBUTY TŘÍDY =============================================
    //== PROMĚNNÉ ATRIBUTY TŘÍDY ===============================================
    //== STATICKÝ INICIALIZAČNÍ BLOK - STATICKÝ KONSTRUKTOR ====================
    //== KONSTANTNÍ ATRIBUTY INSTANCÍ ==========================================
    //== PROMĚNNÉ ATRIBUTY INSTANCÍ ============================================
    //== PŘÍSTUPOVÉ METODY VLASTNOSTÍ TŘÍDY ====================================
    //== OSTATNÍ NESOUKROMÉ METODY TŘÍDY =======================================
    
    //##########################################################################
    //== KONSTRUKTORY A TOVÁRNÍ METODY =========================================

    /***************************************************************************
     *
     */
    public $CLASSNAME()
    {
    }



    //== ABSTRAKTNÍ METODY =====================================================
    //== PŘEKRYTÉ METODY RODIČOVSKÉ TŘÍDY DEFINOVANÉ ŠABLONOU ==================

    /***************************************************************************
     * Metoda volaná AMS (Application Management Software - program pro správu
     * aplikací) v okamžiku spuštění MIDletu.
     * AMS je program na daném zařízení, který spravuje zavádění MIDletů
     * a jejich následný životní cyklus. Po ukončení konstrukotru AMS převede
     * daný MIDlet do stavu <b>Čekající</b> (Paused). Z tohoto stavu bude
     * MIDlet převeden do stavu <b>Aktivní</b> zavoláním metody
     * {@link #startApp()}
     */
    public $CLASSNAME()
    {
        //TODO Inicializace MIDletu.
        throw new UnsupportedOperationException("Prozatím neimplementováno");
    }


    /***************************************************************************
     * Zavoláním této metoda oznamuje AMS MIDletu, že jej převádí do stavu
     * <b>Aktivní</b> - v tomto stavu může MIDlet "držet" různé zdroje.
     * Metoda je volána pouze tehdy, byl-li MIDlet ve stavu <b>Čekající</b>.
     * <p>
     * Případné vyhození výjimky typu {@link RuntimeException} způsobí okamžité
     * ukončení aplikace, před nímž ale bude nejprve zavolána metoda
     * {@link #destroyApp(boolean)}, aby MIDlet mohl po sobě uklidit.
     */
    public void startApp()
    {
        //TODO Alokace prostředků požadovaných pro běh MIDletu
        throw new UnsupportedOperationException("Prozatím neimplementováno");
    }


    /***************************************************************************
     * Zavoláním této metoda oznamuje AMS MIDletu, že jej převádí do stavu
     * <b>Čekající</b> - metoda proto musí uvolnit alokované zdroje
     * a zastavit veškeré aktivity MIDletu.
     * Metoda je volána pouze tehdy, byl-li MIDlet ve stavu <b>Aktivní</b>.
     * AMS může převést MIDlet ze stavu <b>Aktivní</b> do stavu <b>Čekající</b>
     * a zpět libovolně krát během jeho běhu.
     * <p>
     * Případné vyhození výjimky typu {@link RuntimeException} způsobí okamžité
     * ukončení aplikace, před nímž ale bude nejprve zavolána metoda
     * {@link #destroyApp(boolean)}, aby MIDlet mohl po sobě uklidit.
     */
    public void pauseApp()
    {
        //TODO Uvolnění alokovaných zdrojů
        throw new UnsupportedOperationException("Prozatím neimplementováno");
    }


    /***************************************************************************
     * Zavoláním této metoda oznamuje AMS MIDletu, že ukončuje jeho běh.
     * Metoda proto musí uvolnit všechny alokované zdroje a případně je uložit.
     * <p>
     * Volající metoda může prostřednictvím parametru "prozradit",
     * má-li MIDlet šanci svému ukončení zabránit.
     *
     * @param opravdu Je-li {@code false}, může MIDlet odmítnout své ukončení
     *                vyhozením výjimky {@link
     *                javax.microedition.midlet.MIDletStateChangeException}.
     *                Je-li {@code true}, jeho ukončení nic nezabrání.
     * @throws javax.microedition.midlet.MIDletStateChangeException
     *                vyhodí, když che zabránit svému ukončení. Aby však mělo
     *                vyhození výjimky smysl, musí mít parametr {@code opravdu}
     *                hodnotu {@code false};
     */
    public void destroyApp(boolean unconditional)
    {
        //TODO Uvolnění všech zdrojů a ukončení MIDletu
        throw new UnsupportedOperationException("Prozatím neimplementováno");
    }



    //== PŘÍSTUPOVÉ METODY VLASTNOSTÍ INSTANCÍ =================================
    //== OSTATNÍ NESOUKROMÉ METODY INSTANCÍ ====================================
    //== SOUKROMÉ A POMOCNÉ METODY TŘÍDY =======================================
    //== SOUKROMÉ A POMOCNÉ METODY INSTANCÍ ====================================
    //== INTERNÍ DATOVÉ TYPY ===================================================
    //== TESTOVACÍ METODY A TŘÍDY ==============================================
    //
    //     /********************************************************************
    //      * Testovací metoda.
    //      */
    //     public static void test()
    //     {
    //         $CLASSNAME instance = new $CLASSNAME();
    //     }
    //     /** @param args Parametry příkazového řádku - nepoužívané. */
    //     public static void main(String[] args)  {  test();  }
}
