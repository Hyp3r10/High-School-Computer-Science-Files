/* Soubor je ulozen v kodovani UTF-8.
 * Kontrola kódování: Příliš žluťoučký kůň úpěl ďábelské ódy. */
$PKGLINE

import java.awt.Graphics;

import javax.swing.JApplet;
import javax.swing.JRootPane;



/*******************************************************************************
 * Instance třídy {@code $CLASSNAME} představují ...
 *
 * @author    jméno autora
 * @version   0.00.000
 */
@SuppressWarnings("serial")
public class $CLASSNAME extends JApplet
{
    //== KONSTANTNÍ ATRIBUTY TŘÍDY =============================================
    //== PROMĚNNÉ ATRIBUTY TŘÍDY ===============================================
    //== STATICKÝ INICIALIZAČNÍ BLOK - STATICKÝ KONSTRUKTOR ====================
    //== KONSTANTNÍ ATRIBUTY INSTANCÍ ==========================================
    //== PROMĚNNÉ ATRIBUTY INSTANCÍ ============================================
    //== PŘÍSTUPOVÉ METODY VLASTNOSTÍ TŘÍDY ====================================
    //== OSTATNÍ NESOUKROMÉ METODY TŘÍDY =======================================
    
    //##########################################################################
    //== KONSTRUKTORY A TOVÁRNÍ METODY =========================================

    /***************************************************************************
     * Bezparametrický konstruktor ...
     * <p>
     * Poznámka: Většina metod by měla být volána až poté, co bude daný objekt
     *           zkonstruován. V konstruktoru bychom proto neměli volat metody
     *           z {@link java.applet.Applet}.
     */
    public $CLASSNAME()
    {
        //TODO Konstruktor
        throw new UnsupportedOperationException("Prozatím neimplementováno");
    }



    //== ABSTRAKTNÍ METODY =====================================================
    //== PŘÍSTUPOVÉ METODY VLASTNOSTÍ INSTANCÍ =================================
    //== PŘEKRYTÉ METODY RODIČOVSKÉ TŘÍDY DEFINOVANÉ ŠABLONOU ==================

    /***************************************************************************
     * Tato metoda je volána prohlížecem nebo appletviewerem, který takto
     * informuje aplet o tom, že byl nahrán do systému.
     * Je volaná ještě před prvním zavolánim metody {@link &start()}.
     */
    @Override
    public void init()
    {
        /* Toto je pouze dočasné řešeni bezpečnostního konfliktu současných
         * prohlížečů včetně Netscape & Internet Exploreru, které nepovolují
         * přistup k AWT systémové frontě události
         * o nějž se JApplet při svém startu pokouší.
         * Není vyloučeno, že váš prohlížeč už jeho použití nevyžaduje. */
        JRootPane jRootPane = this.getRootPane();
        jRootPane.putClientProperty("defeatSystemEventQueueCheck",Boolean.TRUE);

        //TODO Inicializace appletu
        throw new UnsupportedOperationException("Prozatím neimplementováno");
    }


    /***************************************************************************
     * Tato metoda je volána prohlížečem nebo appletviewerem, který takto
     * informuje aplet, že byl spuštěn. Je volaná po metodě {@link #init()}
     * a při každém opětovném navštívení stránky.
     */
    @Override
    public void start()
    {
        //TODO start() - Kód pro spuštení apletu při každé návštěvě stránky
        throw new UnsupportedOperationException("Prozatím neimplementováno");
    }


    /***************************************************************************
     * Toto je pravděpodobně nejdůležitější metoda appletu -
     * zde je uveden kód pro vykreslení appletu na obrazovku.
     *
     * @param kreslítko  Objekt třídy {@link java.awt.Graphics}
     *                   jehož prostřednictvím je na obrazovku kresleno.
     */
    @Override
    public void paint(Graphics kreslítko)
    {
        //Aplet zobrazí jednoduchý text
        kreslítko.drawString("Ukázkový aplet", 20, 20);
        //TODO paint(Graphics kreslítko) - kód pro vykreslení appletu
        throw new UnsupportedOperationException("Prozatím neimplementováno");
    }


    /***************************************************************************
     * Tato metoda je volána prohlížečem nebo appletviewerem, který takto
     * oznamuje apletu, že má svoji činnost ukončit.
     * Je volaná při nahrazení stránky s apletem jinou stránkou
     * a před tím než je appletem volána metoda <code>destroy</code>.
     * V teto metodě jsou ukončována spuštěná vlákna.
     */
    @Override
    public void stop()
    {
        //TODO stop() - kód pro ukončení činnost apletu
        throw new UnsupportedOperationException("Prozatím neimplementováno");
    }


    /***************************************************************************
     * Tato metoda je volána prohlížečem nebo appletviewerem, který takto
     * oznamuje apletu, že má uvolnit všechny alokované zdroje.
     * Před touto metodou je vždy volána metoda {@link #stop()}.
     */
    @Override
    public void destroy()
    {
        //TODO destroy()
        throw new UnsupportedOperationException("Prozatím neimplementováno");
    }


    /***************************************************************************
     * Vrací informace o appletu.
     * Applet by měl tuto metodu překrýt a vrátit řetězec obsahující
     * informace o autorovi, verzi a autorských právech k appletu.
     *
     * @return Řetězec obsahuji informace o appletu
     */
    @Override
    public String getAppletInfo()
    {
        //TODO Informace o parametrech appletu
        throw new UnsupportedOperationException("Prozatím neimplementováno");
        //        return "Název:   \n" +
        //               "Autor:   \n" +
        //               "Jednoduchý ukázkový applet. ";
    }


    /***************************************************************************
     * Vrací informace o parametrech, které tento applet umí zpracovat.
     * Applet by měl překryt tuto metodu tak, aby vracela pole polí
     * textových řetězců popisujících tyto parametry.
     * Každý prvek tohoto pole se skládá ze tři řetězců obsahujících
     * jméno, typ a popis.
     *
     * @return Pole trojic řetězců reprezentující parametry tohoto appletu
     */
    @Override
    public String[][] getParameterInfo()
    {
        //TODO Informace o parametrech appletu
        throw new UnsupportedOperationException("Prozatím neimplementováno");
        //        String paramInfo[][] = {
        //            { "prvniParam", "1-10",     "popis prvního parametru" },
        //            { "stav",       "boolean",  "popis druhého parametru" },
        //            { "obrázky",    "url",      "popis třetího parametru" }
        //        };
        //        return paramInfo;
    }



    //== OSTATNÍ NESOUKROMÉ METODY INSTANCÍ ====================================
    //== SOUKROMÉ A POMOCNÉ METODY TŘÍDY =======================================
    //== SOUKROMÉ A POMOCNÉ METODY INSTANCÍ ====================================
    //== INTERNÍ DATOVÉ TYPY ===================================================
    //== TESTOVACÍ METODY A TŘÍDY ==============================================
    //
    //     /********************************************************************
    //      * Testovací metoda.
    //      */
    //     public static void test()
    //     {
    //         $CLASSNAME instance = new $CLASSNAME();
    //     }
    //     /** @param args Parametry příkazového řádku - nepoužívané. */
    //     public static void main(String[] args)  {  test();  }
}
