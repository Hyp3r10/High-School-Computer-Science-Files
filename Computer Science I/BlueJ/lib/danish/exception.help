#BlueJ/Greenfoot dialogues.
#Sat Nov 08 17:57:20 GMT 2008
NullPointerException*
Du pr\u00F8vede at tilg\u00E5 et objekt (enten et felt
i et objekt eller en metode p\u00E5 et objekt). Dette
virkede ikke fordi objekt-referencen du brugte
til at tilg\u00E5 objektet var 'null'. For
eksempel: Du skrev "ting.print()", og "ting"
var null p\u00E5 det tidspunkt.

ArithmeticException*
Noget gik galt under en aritmetisk
beregning, s\u00E5som en division med 0 eller
lignende.

StringIndexOutOfBoundsException*
Du har pr\u00F8vet at tilg\u00E5 et tegn eller en delstreng
i en streng , og indekset du brugte, eksisterer ikke
i den streng. For eksempel kan du have pr\u00F8vet at
tilg\u00E5 det femte tegn i en streng der kun er
tre tegn lang.
For delstreng-operationer, husk at den anden parameter
er slut-indekset af delstrengen, ikke
l\u00E6ngden.

ClassCastException*
Du brugte en "cast" - en typekonvertering, dvs. en instruktion
der tildeler en anden type til et objekt, som i dette
eksempel:
       (String)etObjekt
Her bliver "etObjekt" typekonverteret til "String". Dette er kun
tilladt hvis objektet lagret i etObjekt virkelig er af typen 
String.
Med andre ord: du kan kun typekonvertere til typen T hvis
objektet du typekonverterer er af typen T eller en af dens
nedarvinger. Det var den ikke i dette tilf\u00E6lde.

IndexOutOfBoundsException*
Et indeks af en slags (s\u00E5som til en liste, til en streng,
eller til en vektor) er udenfor tilladt omr\u00E5de. "Udenfor tilladt 
omr\u00E5de" betyder at indekset ikke eksisterer i listen eller lignende
samling (f.eks. du pr\u00F8vede at tilg\u00E5 element 5, men der var
kun tre elementer).

ArrayIndexOutOfBoundsException*
Et liste-indeks er udenfor tilladt omr\u00E5de. "Udenfor tilladt omr\u00E5de" 
betyder at indekset ikke eksisterer i listen (f.eks. du
pr\u00F8vede at tilg\u00E5 element 5, men der var kun tre
elementer). Det lovlige indeks-omr\u00E5de er 0..listeL\u00E6ngde-1.

ConcurrentModificationException*
Du itererer over en samling her.
Mens du gjorde det, blev samlingen \u00E6ndret.
Det er et problem. Du har ikke tilladelse til at \u00E6ndre
samlingen under en iteration. Eller omvendt:
du kan ikke forts\u00E6tte iterationen efter at du
\u00E6ndrede i samlingen. Den eneste \u00E6ndring
der er tilladt under en iteration er sletning af elementer
med iteratorens 'remove' metode (IKKE 'remove' i selve
samlingen).

AssertionError*
En antagelse fejlede. Dette betyder at udtrykket
inden i 'assert' s\u00E6tningen
    assert(antagelses-udtryk)
blev evalueret til falsk. Antagelsen blev h\u00F8jst
sandsynligt sat der for at sikre at antagelsen er sand p\u00E5 dette
tidspunkt, og at den er falsk indikerer en fejl af en slags.
Den eksakte betydning af denne fejl afh\u00E6nger af programmet.
Du b\u00F8r unders\u00F8ge hvorfor dette udtryk var falsk.

ClassNotFoundException*
En klasse der var behov for, for at k\u00F8re denne applikation
blev ikke fundet. Det ser ud til at den blev fundet da
applikationen blev oversat, men nu er den v\u00E6k.
Mulige \u00E5rsager kan v\u00E6re at dit Java system ikke
er opsat korrekt (hvis den omtalte klasse er en 
system klasse) eller at dit projekt er beskadiget (nogle
klasse-filer forsvandt eller blev beskadiget).
Pr\u00F8v at genbygge hele projektet. Hvis problemet 
bliver ved, s\u00E5 check andre projekter. Hvis det sker med
mere end et projekt, kan du v\u00E6re n\u00F8dt til at
reinstallere JDK.

StackOverflowError*
Fejlen indikerer at du l\u00F8b t\u00F8r for Stak-hukommelse.
Dette sker typisk n\u00E5r dit program har en specifik form
for programmerings-fejl, kaldet "uendelig rekursion".
Rekursion betyder at en metode kalder sig selv. Uendelig
rekursion betyder at du g\u00F8r dette uendeligt, og 
til sidst l\u00F8ber t\u00F8r for hukommelse.
Kig p\u00E5 koden og unders\u00F8g om en af metoderne
indeholder kald til sig selv. Dette er ikke et problem i sig 
selv, kun hvis den kalder sig selv igen og igen og 
igen osv.
Det samme problem opst\u00E5r ogs\u00E5 hvis du har en konstrukt\u00F8r
der laver et andet objekt af samme klasse. S\u00E5 vil
konstrukt\u00F8ren kalde sig selv, som vil kalde sig selv,
som vil kalde sig selv.... du kan sikkert se pointen.

ArrayStoreException*
Ingen tilg\u00E6ngelig hj\u00E6lp - desv\u00E6rre.

CannotRedoException*
Ingen tilg\u00E6ngelig hj\u00E6lp - desv\u00E6rre.

CannotUndoException*
Ingen tilg\u00E6ngelig hj\u00E6lp - desv\u00E6rre.

CMMException*
Ingen tilg\u00E6ngelig hj\u00E6lp - desv\u00E6rre.

EmptyStackException*
Ingen tilg\u00E6ngelig hj\u00E6lp - desv\u00E6rre.

IllegalArgumentException*
Ingen tilg\u00E6ngelig hj\u00E6lp - desv\u00E6rre.

IllegalMonitorStateException*
Ingen tilg\u00E6ngelig hj\u00E6lp - desv\u00E6rre.

IllegalPathStateException*
Ingen tilg\u00E6ngelig hj\u00E6lp - desv\u00E6rre.

IllegalStateException*
Ingen tilg\u00E6ngelig hj\u00E6lp - desv\u00E6rre.

ImagingOpException*
Ingen tilg\u00E6ngelig hj\u00E6lp - desv\u00E6rre.

MissingResourceException*
Ingen tilg\u00E6ngelig hj\u00E6lp - desv\u00E6rre.

NegativeArraySizeException*
Ingen tilg\u00E6ngelig hj\u00E6lp - desv\u00E6rre.

NoSuchElementException*
Ingen tilg\u00E6ngelig hj\u00E6lp - desv\u00E6rre.

ProfileDataException*
Ingen tilg\u00E6ngelig hj\u00E6lp - desv\u00E6rre.

ProviderException*
Ingen tilg\u00E6ngelig hj\u00E6lp - desv\u00E6rre.

RasterFormatException*
Ingen tilg\u00E6ngelig hj\u00E6lp - desv\u00E6rre.

SecurityException*
Ingen tilg\u00E6ngelig hj\u00E6lp - desv\u00E6rre.

SystemException*
Ingen tilg\u00E6ngelig hj\u00E6lp - desv\u00E6rre.

UndeclaredThrowableException*
Ingen tilg\u00E6ngelig hj\u00E6lp - desv\u00E6rre.

UnsupportedOperationException*
Ingen tilg\u00E6ngelig hj\u00E6lp - desv\u00E6rre.

Exception
Dette er en generel undtagelse, der kun betyder
at noget gik galt. Jeg ved ikke
hvad det er...

