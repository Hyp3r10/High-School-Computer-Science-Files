$PKGLINE
import java.awt.*;
import javax.swing.*;

/**
 * Klasse $CLASSNAME - lav en beskrivelse af klassen her
 * 
 * @author (dit navn her)
 * @version (versionsnummer eller dato her)
 */
public class $CLASSNAME extends JApplet
{
	// instansvariable - erstat eksemplet herunder med dine egne variable
	private int x;

	 /**
	 * Kaldes af browseren eller applet-viewer for at informere JApplet om at
	 * den er indlæst i systemet. Den kaldes altid før første gang 
	 * metoden start() bliver kaldt.
	 */
	public void init()
	{
		// Dette er en nødløsning for en sikkerhedskonflikt i nogle browsere		
		// insklusive nogle versioner af Netscape og Internet Explorer, som ikke 
		// tillader adgang til AWT-systemets hændelseskø som JApplet laver ved 
		// opstart for at checke adgang. Er måske ikke nødvendig i din browser. 
		JRootPane rootPane = this.getRootPane();	
		rootPane.putClientProperty("defeatSystemEventQueueCheck", Boolean.TRUE);
	
		// indsæt initialiseringskode til din JApplet her
	}

	/**
	 * Kaldes af browser eller applet-viewer for at informere denne JApplet om  
	 * at den skal starte sin kørsel. Den kaldes efter init()-metoden og hver 
	 * gang JApplet'en mødes på en webside. 
	 */
	public void start()
	{
		// indsæt kode der skal køre hver gang 
		// websiden besøges
	}

	/** 
	 * Kaldet af browseren eller applet-viewer for at informere denne JApplet om
	 * at den skal stoppe sin kørsel. Den kaldes når web-siden der indeholder
	 * denne JApplet er blevet erstattet af en anden side, og også lige før
	 * JApplet'en skal destrueres. 
	 */
	public void stop()
	{
		// indsæt kode der skal køre når siden erstattes af en anden side
		// eller før JApplet'en skal destrueres 
	}

	/**
	 * Paint-metode for appletten.
	 * 
	 * @param  g   Graphics-objektet for denne applet
	 */
	public void paint(Graphics g)
	{
		// simpel tekst, vist på appletten
		g.setColor(Color.white);
		g.fillRect(0, 0, 200, 100);
		g.setColor(Color.black);
		g.drawString("Sample Applet", 20, 20);
		g.setColor(Color.blue);
		g.drawString("created by BlueJ", 20, 40);
	}

	/**
	 * Kaldet af browseren eller applet vieweren for at informere denne JApplet
	 * om at den inddrages og at den skal destruere alle resurser som den har
	 * allokeret. Stop metoden kaldes altid før destroy. 
	 */
	public void destroy()
	{
		// indsæt kode der skal køre når JApplet'en skal til at destrueres.
	}


	/**
	 * Returnerer information om denne applet. 
	 * En applet bør implementere denne metode for at returnere en streng der 
	 * indeholder information om forfatter, version og applettens copyright.
	 *
	 * @return en String med information om denne applet
	 */
	public String getAppletInfo()
	{
		// Levér information om denne applet
		return "Titel:   \nForfatter:   \nEn simpel applet eksempel-beskrivelse. ";
	}


	/**
	 * Returner parameter information om denne JApplet. 
	 * Returner information om parametrene som denne JApplet kan forstå.
	 * En applet bør implementere denne metode for at returnere et array af strenge 
	 * der beskriver disse parametre. 
	 * Hvert element i array'et skal være et sæt af tre strenge der indeholder 
	 * navnet, typen, og en besktivelse.
	 *
	 * @return en String[] repræsentation af parameter information om denne JApplet
	 */
	public String[][] getParameterInfo()
	{
		// Levér parameter information om appletten
		String paramInfo[][] = {
				 {"firstParameter",	"1-10",	"beskrivelse af første parameter"},
				 {"status", "boolean", "beskrivelse af anden parameter"},
				 {"images",   "url",	 "beskrivelse af tredje parameter"}
		};
		return paramInfo;
	}
}
